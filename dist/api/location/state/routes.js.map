{"version":3,"sources":["../../../../src/api/location/state/routes.js"],"names":["router","express","Router","get","fetchRecord","post","checkAuth","isValidUser","createRecord","put","updateRecord","patch","patchRecord","deleteRecord"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAHA;AAKA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AAEA;;;;;;;;;;;;;;;;;;AAgBAF,MAAM,CAACG,GAAP,CAAW,SAAX,EAAsBC,uBAAtB;AAEA;;;;;;;;;;;;;;;AAcAJ,MAAM,CAACK,IAAP,CAAY,SAAZ,EAAuB,CAACC,qBAAD,EAAYC,uBAAZ,CAAvB,EAAiDC,wBAAjD;AAEA;;;;;;;;;;;;;;;AAcAR,MAAM,CAACS,GAAP,CAAW,mBAAX,EAAgC,CAACH,qBAAD,EAAYC,uBAAZ,CAAhC,EAA0DG,wBAA1D;AAEA;;;;;;;;;;;AAUAV,MAAM,CAACW,KAAP,CAAa,mBAAb,EAAkC,CAACL,qBAAD,EAAYC,uBAAZ,CAAlC,EAA4DK,uBAA5D;AAEA;;;;;;;;;;;AAUAZ,MAAM,UAAN,CAAc,mBAAd,EAAmC,CAACM,qBAAD,EAAYC,uBAAZ,CAAnC,EAA6DM,wBAA7D;eAEeb,M","sourcesContent":["/* eslint-disable object-curly-newline */\nimport express from 'express';\nimport { checkAuth, isValidUser } from '../../../middleware';\nimport { fetchRecord, createRecord, updateRecord, deleteRecord, patchRecord } from './controller';\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/states?id={recordId} Retrieve State records\n * @apiName RetrieveState\n * @apiGroup State\n * @apiHeader {String} Authorization Bearer token\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/states?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records of Geographical entities housing terminals\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get('/states', fetchRecord);\n\n/**\n * @api {post} /api/states Create a State record\n * @apiName CreateState\n * @apiGroup State\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} name State name\n * @apiParam {String} country The Country where the state is located\n * @apiParam {ObjectId} createdBy State record created by\n * @apiParam {ObjectId} updatedBy State record modified by\n * @apiSuccess {Object} State State's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 State not found.\n * @apiError 401 master access only.\n */\nrouter.post('/states', [checkAuth, isValidUser], createRecord);\n\n/**\n * @api {put} /api/states/{recordId} Update a State record\n * @apiName UpdateState\n * @apiGroup State\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} name State name\n * @apiParam {String} country The Country where the state is located\n * @apiParam {ObjectId} createdBy State record created by\n * @apiParam {ObjectId} updatedBy State record modified by\n * @apiSuccess {Object} State State's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 State not found.\n * @apiError 401 master access only.\n */\nrouter.put('/states/:recordId', [checkAuth, isValidUser], updateRecord);\n\n/**\n * @api {patch} /api/states/{recordId} Patch states\n * @apiName PatchState\n * @apiGroup State\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 State not found.\n * @apiError 401 master access only.\n */\nrouter.patch('/states/:recordId', [checkAuth, isValidUser], patchRecord);\n\n/**\n * @api {delete} /api/states/{recordId} Delete a State record\n * @apiName DeleteState\n * @apiGroup State\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 State not found.\n * @apiError 401 master access only.\n */\nrouter.delete('/states/:recordId', [checkAuth, isValidUser], deleteRecord);\n\nexport default router;\n"],"file":"routes.js"}