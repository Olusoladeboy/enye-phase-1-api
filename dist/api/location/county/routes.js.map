{"version":3,"sources":["../../../../src/api/location/county/routes.js"],"names":["router","express","Router","get","fetchRecord","post","checkAuth","isValidUser","createRecord","put","updateRecord","patch","patchRecord","deleteRecord"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAHA;AAKA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AAEA;;;;;;;;;;;;;;;;;AAeAF,MAAM,CAACG,GAAP,CAAW,WAAX,EAAwBC,uBAAxB;AAEA;;;;;;;;;;;;;;;AAcAJ,MAAM,CAACK,IAAP,CAAY,WAAZ,EAAyB,CAACC,qBAAD,EAAYC,uBAAZ,CAAzB,EAAmDC,wBAAnD;AAEA;;;;;;;;;;;;;;;;AAeAR,MAAM,CAACS,GAAP,CAAW,qBAAX,EAAkC,CAACH,qBAAD,EAAYC,uBAAZ,CAAlC,EAA4DG,wBAA5D;AAEA;;;;;;;;;;;AAUAV,MAAM,CAACW,KAAP,CAAa,qBAAb,EAAoC,CAACL,qBAAD,EAAYC,uBAAZ,CAApC,EAA8DK,uBAA9D;AAEA;;;;;;;;;;;AAUAZ,MAAM,UAAN,CAAc,qBAAd,EAAqC,CAACM,qBAAD,EAAYC,uBAAZ,CAArC,EAA+DM,wBAA/D;eAEeb,M","sourcesContent":["/* eslint-disable object-curly-newline */\nimport express from 'express';\nimport { checkAuth, isValidUser } from '../../../middleware';\nimport { fetchRecord, createRecord, updateRecord, patchRecord, deleteRecord } from './controller';\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/counties?id={recordId} Retrieve one or all records\n * @apiName RetrieveCounty\n * @apiGroup County\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/counties?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records counties (or local government areas) of operation\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get('/counties', fetchRecord);\n\n/**\n * @api {post} /api/counties Create counties\n * @apiName CreateCounty\n * @apiGroup County\n * @apiParam {ObjectId} id County primaryKey\n * @apiParam {String} name County short name\n * @apiParam {ObjectId} state County State Id\n * @apiParam {ObjectId} createdBy County record created by\n * @apiParam {ObjectId} updatedBy County record modified by\n * @apiSuccess {Object} County County's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 County not found.\n * @apiError 401 master access only.\n */\nrouter.post('/counties', [checkAuth, isValidUser], createRecord);\n\n/**\n * @api {put} /api/counties/{recordId} Update counties\n * @apiName UpdateCounty\n * @apiGroup County\n * @apiPermission master\n * @apiParam {ObjectId} id County primaryKey\n * @apiParam {String} name County short name\n * @apiParam {ObjectId} state County State Id\n * @apiParam {ObjectId} createdBy County record created by\n * @apiParam {ObjectId} updatedBy County record modified by\n * @apiSuccess {Object} County County's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 County not found.\n * @apiError 401 master access only.\n */\nrouter.put('/counties/:recordId', [checkAuth, isValidUser], updateRecord);\n\n/**\n * @api {patch} /api/counties/{recordId} Patch counties\n * @apiName PatchCounty\n * @apiGroup County\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Country not found.\n * @apiError 401 master access only.\n */\nrouter.patch('/counties/:recordId', [checkAuth, isValidUser], patchRecord);\n\n/**\n * @api {delete} /api/counties/{recordId} Delete counties\n * @apiName DeleteCounty\n * @apiGroup County\n * @apiPermission master\n * @apiParam {String} accessToken master access token.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 County not found.\n * @apiError 401 master access only.\n */\nrouter.delete('/counties/:recordId', [checkAuth, isValidUser], deleteRecord);\n\nexport default router;\n"],"file":"routes.js"}