{"version":3,"sources":["../../../../src/api/location/county/model.js"],"names":["Schema","mongoose","ObjectId","Types","validateCreate","Joi","object","name","string","trim","required","state","createdBy","length","validateUpdate","optional","updatedBy","schema","type","String","ref","allowNull","deleted","Boolean","deletedAt","Date","deletedBy","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","plugin","mongoose_csv","County","model","insertMany","table"],"mappings":";;;;;;;AAWA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;AAlBA;;AACA;;AACA;;;;;;;;;AAWA;IAOQA,M,GAAWC,oB,CAAXD,M;IACAE,Q,GAAaF,MAAM,CAACG,K,CAApBD,Q;;AAED,IAAME,cAAc,GAAGC,gBAAIC,MAAJ,CAAW;AACvCC,EAAAA,IAAI,EAAEF,gBAAIG,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,EADiC;AAEvCC,EAAAA,KAAK,EAAEN,gBAAIG,MAAJ,GAAaE,QAAb,EAFgC;AAGvCE,EAAAA,SAAS,EAAEP,gBAAIG,MAAJ,GAAaC,IAAb,GAAoBI,MAApB,CAA2B,EAA3B,EAA+BH,QAA/B;AAH4B,CAAX,CAAvB;;;;AAMA,IAAMI,cAAc,GAAGT,gBAAIC,MAAJ,CAAW;AACvCC,EAAAA,IAAI,EAAEF,gBAAIG,MAAJ,GAAaC,IAAb,GAAoBM,QAApB,EADiC;AAEvCJ,EAAAA,KAAK,EAAEN,gBAAIG,MAAJ,GAAaO,QAAb,EAFgC;AAGvCC,EAAAA,SAAS,EAAEX,gBAAIG,MAAJ,GAAaC,IAAb,GAAoBI,MAApB,CAA2B,EAA3B,EAA+BH,QAA/B;AAH4B,CAAX,CAAvB;;;AAMA,IAAMO,MAAM,GAAG;AACpBV,EAAAA,IAAI,EAAE;AAAEW,IAAAA,IAAI,EAAEC;AAAR,GADc;AAEpBR,EAAAA,KAAK,EAAE;AAAEO,IAAAA,IAAI,EAAEhB,QAAR;AAAkBkB,IAAAA,GAAG,EAAE;AAAvB,GAFa;AAGpBR,EAAAA,SAAS,EAAE;AAAEM,IAAAA,IAAI,EAAEhB,QAAR;AAAkBQ,IAAAA,QAAQ,EAAE;AAA5B,GAHS;AAIpBM,EAAAA,SAAS,EAAE;AAAEE,IAAAA,IAAI,EAAEhB,QAAR;AAAkBmB,IAAAA,SAAS,EAAE;AAA7B,GAJS;AAKpBC,EAAAA,OAAO,EAAE;AAAEJ,IAAAA,IAAI,EAAEK,OAAR;AAAiB,eAAS;AAA1B,GALW;AAMpBC,EAAAA,SAAS,EAAE;AAAEN,IAAAA,IAAI,EAAEO;AAAR,GANS;AAOpBC,EAAAA,SAAS,EAAE;AAAER,IAAAA,IAAI,EAAEhB,QAAR;AAAkBkB,IAAAA,GAAG,EAAE;AAAvB;AAPS,CAAf;;AAUP,IAAMO,OAAO,GAAGC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,OAAO,GAAGH,oBAASI,OAAzB;AAEA,IAAMC,SAAS,GAAG,IAAIjC,MAAJ,CAAWiB,MAAX,EAAmBc,OAAnB,CAAlB;AACAE,SAAS,CAACC,GAAV,CAAc,YAAd,EAA4B,QAA5B;AACAD,SAAS,CAACE,MAAV,CAAiBC,uBAAjB;;AAEA,IAAMC,MAAM,GAAGpC,qBAASqC,KAAT,CAAe,QAAf,EAAyBL,SAAzB,CAAf;;AACA,IAAIN,OAAJ,EAAa;AAAEU,EAAAA,MAAM,CAACE,UAAP,CAAkBC,iBAAlB;AAA2B;;eAE3BH,M","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable import/no-cycle */\n/**\n * @author 4Decoder\n * @property {ObjectId} id County primaryKey\n * @property {String} name County short name\n * @property {ObjectId} state County State Id\n * @property {ObjectId} createdBy County record created by\n * @property {ObjectId} updatedBy County record modified by\n * @description County holds record of all cities with terminalList\n */\nimport Joi from 'joi';\nimport mongoose from 'mongoose';\n// eslint-disable-next-line camelcase\nimport mongoose_csv from 'mongoose-csv';\nimport { DATABASE } from '../../../constants';\nimport table from './table';\nimport State from '../state/model';\nimport User from '../../user/model';\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const validateCreate = Joi.object({\n  name: Joi.string().trim().required(),\n  state: Joi.string().required(),\n  createdBy: Joi.string().trim().length(24).required(),\n});\n\nexport const validateUpdate = Joi.object({\n  name: Joi.string().trim().optional(),\n  state: Joi.string().optional(),\n  updatedBy: Joi.string().trim().length(24).required(),\n});\n\nexport const schema = {\n  name: { type: String },\n  state: { type: ObjectId, ref: 'State' },\n  createdBy: { type: ObjectId, required: true },\n  updatedBy: { type: ObjectId, allowNull: true },\n  deleted: { type: Boolean, default: false },\n  deletedAt: { type: Date },\n  deletedBy: { type: ObjectId, ref: 'User' },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set('collection', 'county');\nnewSchema.plugin(mongoose_csv);\n\nconst County = mongoose.model('County', newSchema);\nif (preload) { County.insertMany(table); }\n\nexport default County;\n"],"file":"model.js"}