{"version":3,"sources":["../../../../src/api/multimedia/category/model.js"],"names":["Schema","mongoose","ObjectId","Types","validateCreate","Joi","object","code","string","required","name","description","optional","parent","trim","length","image","createdBy","validateUpdate","updatedBy","schema","type","String","index","ref","deleted","Boolean","deletedAt","Date","deletedBy","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","Category","model","insertMany","table"],"mappings":"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","sourcesContent":["/**\n * @author Nditah\n * @property {ObjectId} id Category primaryKey\n * @property {String} code Category code of category used by the system\n * @property {String} name Category name of category as displayed\n * @property {String} image Category image or icon of category as displayed\n * @property {String} description Category description of category as displayed\n * @property {String} parent Category parent category (from which category is a subcategory)\n * @description Category records user define classification of system records\n */\nimport Joi from 'joi';\nimport mongoose from 'mongoose';\nimport { DATABASE } from '../../../constants';\nimport table from './table';\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const validateCreate = Joi.object({\n  code: Joi.string().required(),\n  name: Joi.string().required(),\n  description: Joi.string().optional(),\n  parent: Joi.string().trim().length(24).optional(),\n  image: Joi.string().trim().length(24).optional(),\n  createdBy: Joi.string().trim().length(24).required(),\n});\n\nexport const validateUpdate = Joi.object({\n  code: Joi.string().optional(),\n  name: Joi.string().optional(),\n  description: Joi.string().optional(),\n  parent: Joi.string().trim().length(24).optional(),\n  image: Joi.string().trim().length(24).optional(),\n  updatedBy: Joi.string().trim().length(24).required(),\n});\n\nexport const schema = {\n  code: {\n    type: String, required: true, trim: true, index: true,\n  },\n  name: { type: String, required: true },\n  description: { type: String, required: true, index: true },\n  parent: { type: ObjectId, ref: 'Category' },\n  image: { type: ObjectId, ref: 'Image' },\n  createdBy: { type: ObjectId, required: true },\n  updatedBy: { type: ObjectId },\n  deleted: { type: Boolean, default: false },\n  deletedAt: { type: Date },\n  deletedBy: { type: ObjectId },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set('collection', 'category');\n\nconst Category = mongoose.model('Category', newSchema);\n\nif (preload) { Category.insertMany(table); }\n\nexport default Category;\n"],"file":"model.js"}