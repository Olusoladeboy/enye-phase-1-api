{"version":3,"sources":["../../../../src/api/multimedia/category/table.js"],"names":["table","code","name","description","UserBaseId","DATABASE","BASE_ID","User","baseId","IMAGE","result","map","record","index","obj","Object","assign","id","_id","parent","createdBy"],"mappings":";;;;;;;AAEA;;AACA;;AAHA;;AACA;AAIA,IAAMA,KAAK,GAAG,CACZ;AAAEC,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,MAAtB;AAA8BC,EAAAA,WAAW,EAAE;AAA3C,CADY,EAEZ;AAAEF,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,IAAI,EAAE,QAAxB;AAAkCC,EAAAA,WAAW,EAAE;AAA/C,CAFY,EAGZ;AAAEF,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,IAAI,EAAE,SAAzB;AAAoCC,EAAAA,WAAW,EAAE;AAAjD,CAHY,EAIZ;AAAEF,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,IAAI,EAAE,WAA3B;AAAwCC,EAAAA,WAAW,EAAE;AAArD,CAJY,EAKZ;AAAEF,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,IAAI,EAAE,MAAtB;AAA8BC,EAAAA,WAAW,EAAE;AAA3C,CALY,CAAd;AAQA,IAAMC,UAAU,GAAGC,oBAASC,OAAT,CAAiBC,IAApC;AACA,IAAMC,MAAM,GAAGH,oBAASC,OAAT,CAAiBG,KAAhC;AAEA,IAAMC,MAAM,GAAGV,KAAK,CAACW,GAAN,CAAU,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC1C,MAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,MAAlB,CAAZ;AACA,MAAMK,EAAE,GAAGJ,KAAK,GAAG,CAAnB;AACAC,EAAAA,GAAG,CAACI,GAAJ,GAAU,sBAAWV,MAAX,EAAmBS,EAAnB,CAAV;AACA,MAAIL,MAAM,CAACO,MAAX,EAAmBL,GAAG,CAACK,MAAJ,GAAa,sBAAWX,MAAX,EAAmBI,MAAM,CAACO,MAA1B,CAAb;AACnBL,EAAAA,GAAG,CAACM,SAAJ,GAAgB,sBAAWhB,UAAX,EAAuB,CAAvB,CAAhB;AACA,SAAOU,GAAP;AACD,CAPc,CAAf;eASeJ,M","sourcesContent":["/* eslint-disable no-underscore-dangle */\n/* eslint-disable prefer-object-spread */\nimport { DATABASE } from '../../../constants';\nimport { toObjectId } from '../../../util';\n\nconst table = [\n  { code: 'User', name: 'User', description: 'User Profile Pictures' },\n  { code: 'DRIVER', name: 'Driver', description: 'Driver Profile Pictures' },\n  { code: 'PARTNER', name: 'Partner', description: 'Partner Profile Pictures' },\n  { code: 'ECOMMERCE', name: 'Ecommerce', description: 'Ecommerce Pictures for products and categories' },\n  { code: 'BLOG', name: 'Blog', description: 'Blogpost image  content' },\n];\n\nconst UserBaseId = DATABASE.BASE_ID.User;\nconst baseId = DATABASE.BASE_ID.IMAGE;\n\nconst result = table.map((record, index) => {\n  const obj = Object.assign({}, record);\n  const id = index + 1;\n  obj._id = toObjectId(baseId, id);\n  if (record.parent) obj.parent = toObjectId(baseId, record.parent);\n  obj.createdBy = toObjectId(UserBaseId, 1);\n  return obj;\n});\n\nexport default result;\n"],"file":"table.js"}