{"version":3,"sources":["../../../src/api/rate/routes.js"],"names":["router","express","Router","get","fetchRecord"],"mappings":";;;;;;;AACA;;AACA;;;;AAFA;AAIA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AAEA;;;;;;;;;;;;;;;;;;AAgBAF,MAAM,CAACG,GAAP,CAAW,QAAX,EAAqBC,uBAArB;eAEeJ,M","sourcesContent":["/* eslint-disable object-curly-newline */\nimport express from 'express';\nimport { fetchRecord } from './controller';\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/rates?id={recordId} Retrieve Rates records\n * @apiName RetrieveRates\n * @apiGroup Rates\n * @apiHeader {String} Authorization Bearer token\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/rates?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of Rates\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get('/rates', fetchRecord);\n\nexport default router;\n"],"file":"routes.js"}