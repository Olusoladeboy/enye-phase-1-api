{"version":3,"sources":["../../../src/api/rate/service.js"],"names":["module","url","fetchService","query","base","currency","axios","get","then","response","result","data","error","console","log","Error","message"],"mappings":";;;;;;;AAQA;;AACA;;AACA;;;;;;;;AACA;AACA;AACA,IAAMA,OAAM,GAAG,MAAf;AACA,IAAMC,GAAG,GAAG,wCAAZ,C,CAEA;;SACsBC,Y;;;;;0EAAf,iBAA4BC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEKC,YAAAA,IAFL,GAEwBD,KAFxB,CAEKC,IAFL,EAEWC,QAFX,GAEwBF,KAFxB,CAEWE,QAFX;AAAA;AAAA,mBAIGC,kBAAMC,GAAN,WAAaN,GAAb,mBAAyBG,IAAzB,sBAAyCC,QAAzC,GACHG,IADG,CACE,UAACC,QAAD,EAAc;AAClB;AACA;AACAC,cAAAA,MAAM,GAAGD,QAAQ,CAACE,IAAlB;AACD,aALG,WAMG,UAACC,KAAD,EAAW;AAChBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,oBAAM,IAAIG,KAAJ,CAAUH,KAAV,CAAN;AACD,aATG,CAJH;;AAAA;AAAA,gBAcEF,MAdF;AAAA;AAAA;AAAA;;AAAA,kBAeK,IAAIK,KAAJ,WAAaf,OAAb,wBAfL;;AAAA;AAAA,6CAiBI,CAACU,MAAD,CAjBJ;;AAAA;AAAA;AAAA;AAAA,kBAmBG,IAAIK,KAAJ,4BAA8Bf,OAA9B,sBAAgD,YAAIgB,OAApD,EAnBH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/* eslint-disable template-curly-spacing */\n/* eslint-disable no-multi-spaces */\n/* eslint-disable consistent-return */\n/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable object-curly-spacing */\n/* eslint-disable object-curly-newline */\nimport aqp from 'api-query-params';\nimport request from 'request';\nimport axios from 'axios';\n// import Task, { validateCreate, validateUpdate } from './model';\n// Logging\nconst module = 'Rate';\nconst url = 'https://api.exchangeratesapi.io/latest';\n\n// eslint-disable-next-line import/prefer-default-export\nexport async function fetchService(query) {\n  try {\n    const { base, currency } = query;\n    let result;\n    await axios.get(`${url}?base=${base}&symbols=${currency}`)\n      .then((response) => {\n        // const {base, date, rates} = response.data;\n        // result = {base, date, rates};\n        result = response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n        throw new Error(error);\n      });\n    if (!result) {\n      throw new Error(`${module} record not found.`);\n    }\n    return [result];\n  } catch (err) {\n    throw new Error(`Error retrieving ${module} record. ${err.message}`);\n  }\n}\n"],"file":"service.js"}