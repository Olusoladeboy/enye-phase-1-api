{"version":3,"sources":["../../../src/api/category/model.js"],"names":["Schema","mongoose","ObjectId","Types","validateCreate","Joi","object","name","string","required","description","optional","createdBy","trim","length","validateUpdate","updatedBy","schema","type","String","ref","deleted","Boolean","deletedAt","Date","deletedBy","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","set","Category","model","insertMany","table"],"mappings":";;;;;;;AAWA;;AACA;;AAEA;;AACA;;;;AAfA;;;;;;;;;;;AAaA;AAGA;AACA;IAEQA,M,GAAWC,oB,CAAXD,M;IACAE,Q,GAAaF,MAAM,CAACG,K,CAApBD,Q;;AAED,IAAME,cAAc,GAAGC,gBAAIC,MAAJ,CAAW;AACvCC,EAAAA,IAAI,EAAEF,gBAAIG,MAAJ,GAAaC,QAAb,EADiC;AAEvCC,EAAAA,WAAW,EAAEL,gBAAIG,MAAJ,GAAaG,QAAb,EAF0B;AAGvCC,EAAAA,SAAS,EAAEP,gBAAIG,MAAJ,GAAaK,IAAb,GAAoBC,MAApB,CAA2B,EAA3B,EAA+BL,QAA/B;AAH4B,CAAX,CAAvB;;;;AAMA,IAAMM,cAAc,GAAGV,gBAAIC,MAAJ,CAAW;AACvCC,EAAAA,IAAI,EAAEF,gBAAIG,MAAJ,GAAaG,QAAb,EADiC;AAEvCD,EAAAA,WAAW,EAAEL,gBAAIG,MAAJ,GAAaG,QAAb,EAF0B;AAGvCK,EAAAA,SAAS,EAAEX,gBAAIG,MAAJ,GAAaK,IAAb,GAAoBC,MAApB,CAA2B,EAA3B,EAA+BL,QAA/B;AAH4B,CAAX,CAAvB;;;AAMA,IAAMQ,MAAM,GAAG;AACpBV,EAAAA,IAAI,EAAE;AAAEW,IAAAA,IAAI,EAAEC,MAAR;AAAgBV,IAAAA,QAAQ,EAAE;AAA1B,GADc;AAEpBC,EAAAA,WAAW,EAAE;AAAEQ,IAAAA,IAAI,EAAEC,MAAR;AAAgBV,IAAAA,QAAQ,EAAE;AAA1B,GAFO;AAGpBG,EAAAA,SAAS,EAAE;AAAEM,IAAAA,IAAI,EAAEhB,QAAR;AAAkBkB,IAAAA,GAAG,EAAE,MAAvB;AAA+BX,IAAAA,QAAQ,EAAE;AAAzC,GAHS;AAIpBO,EAAAA,SAAS,EAAE;AAAEE,IAAAA,IAAI,EAAEhB,QAAR;AAAkBkB,IAAAA,GAAG,EAAE;AAAvB,GAJS;AAKpBC,EAAAA,OAAO,EAAE;AAAEH,IAAAA,IAAI,EAAEI,OAAR;AAAiB,eAAS;AAA1B,GALW;AAMpBC,EAAAA,SAAS,EAAE;AAAEL,IAAAA,IAAI,EAAEM;AAAR,GANS;AAOpBC,EAAAA,SAAS,EAAE;AAAEP,IAAAA,IAAI,EAAEhB,QAAR;AAAkBkB,IAAAA,GAAG,EAAE;AAAvB;AAPS,CAAf;;AAUP,IAAMM,OAAO,GAAGC,oBAASC,kBAAT,CAA4BC,OAA5C;AACA,IAAMC,OAAO,GAAGH,oBAASI,OAAzB;AAEA,IAAMC,SAAS,GAAG,IAAIhC,MAAJ,CAAWiB,MAAX,EAAmBa,OAAnB,CAAlB;AACAE,SAAS,CAACC,GAAV,CAAc,YAAd,EAA4B,UAA5B;;AAEA,IAAMC,QAAQ,GAAGjC,qBAASkC,KAAT,CAAe,UAAf,EAA2BH,SAA3B,CAAjB;;AAEA,IAAIN,OAAJ,EAAa;AAAEQ,EAAAA,QAAQ,CAACE,UAAT,CAAoBC,iBAApB;AAA6B;;eAE7BH,Q","sourcesContent":["/**\n * @author Olusola\n * @property {ObjectId} id Category primaryKey\n * @property {String} type Category type of resource\n * @property {String} code Category code of resource\n * @property {String} name Category name\n * @property {String} description Category description\n * @property {String} subsidiary Category PET|CHEM|PLANT|ENGR\n * @description Category model holds categories for raw materials, projects,\n * finished products for all the subsidiaries.\n */\nimport Joi from 'joi';\nimport mongoose from 'mongoose';\n// eslint-disable-next-line camelcase\nimport { DATABASE } from '../../constants';\nimport table from './table';\n// eslint-disable-next-line import/no-cycle\n// eslint-disable-next-line import/no-cycle\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const validateCreate = Joi.object({\n  name: Joi.string().required(),\n  description: Joi.string().optional(),\n  createdBy: Joi.string().trim().length(24).required(),\n});\n\nexport const validateUpdate = Joi.object({\n  name: Joi.string().optional(),\n  description: Joi.string().optional(),\n  updatedBy: Joi.string().trim().length(24).required(),\n});\n\nexport const schema = {\n  name: { type: String, required: true },\n  description: { type: String, required: true },\n  createdBy: { type: ObjectId, ref: 'User', required: true },\n  updatedBy: { type: ObjectId, ref: 'User' },\n  deleted: { type: Boolean, default: false },\n  deletedAt: { type: Date },\n  deletedBy: { type: ObjectId, ref: 'User' },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set('collection', 'category');\n\nconst Category = mongoose.model('Category', newSchema);\n\nif (preload) { Category.insertMany(table); }\n\nexport default Category;\n"],"file":"model.js"}