{"version":3,"sources":["../../../src/api/user/routes.js"],"names":["router","express","Router","get","checkAuth","isValidUser","fetchHandler","post","createHandler","put","updateHandler","patch","patchHandler","deleteHandler","loginHandler","updateApprovalHandler","updateVerificationStatusHandler"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAHA;AAgBA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AAEA;;;;;;;;;;;;;;;;AAgBA;;;AACAF,MAAM,CAACG,GAAP,CAAW,OAAX,EAAoB,CAACC,wBAAD,EAAYC,0BAAZ,CAApB,EAA8CC,wBAA9C;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;;AACAN,MAAM,CAACO,IAAP,CAAY,OAAZ,EAAqBC,yBAArB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHAR,MAAM,CAACS,GAAP,CAAW,iBAAX,EAA8B,CAACL,wBAAD,EAAYC,0BAAZ,CAA9B,EAAwDK,yBAAxD;AAEA;;;;;;;;;;;AAUAV,MAAM,CAACW,KAAP,CAAa,iBAAb,EAAgC,CAACP,wBAAD,EAAYC,0BAAZ,CAAhC,EAA0DO,wBAA1D;AAEA;;;;;;;;;;;AAUAZ,MAAM,UAAN,CAAc,iBAAd,EAAiC,CAACI,wBAAD,EAAYC,0BAAZ,CAAjC,EAA2DQ,yBAA3D;AAEA;;;;;;;;;;;;;;AAaAb,MAAM,CAACO,IAAP,CAAY,aAAZ,EAA2BO,wBAA3B;AAEA;;;;;;;;;AASA;;AAEA;;;;;;;;;;AAUA;;AAEA;;;;;;;;;;;;;AAYAd,MAAM,CAACS,GAAP,CAAW,0BAAX,EAAuC,CAACL,wBAAD,EAAYC,0BAAZ,CAAvC,EAAiEU,iCAAjE;AAEA;;;;;;;;;;;;;;;AAcAf,MAAM,CAACS,GAAP,CAAW,wBAAX,EAAqC,CAACL,wBAAD,EAAYC,0BAAZ,CAArC,EAA+DW,2CAA/D;eAEehB,M","sourcesContent":["/* eslint-disable no-unused-vars */\nimport express from 'express';\nimport { checkAuth, isValidUser } from '../../middleware/authorization';\nimport {\n  fetchHandler,\n  createHandler,\n  updateHandler,\n  deleteHandler,\n  loginHandler,\n  patchHandler,\n  updateApprovalHandler,\n  updateVerificationStatusHandler,\n  // eslint-disable-next-line import/named\n}\n  from './controller';\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/user?id={recordId} Retrieve User records\n * @apiName RetrieveUser\n * @apiGroup User\n * @apiHeader {String} Authorization Bearer token\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/user?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records of User distributed across terminals.\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\n// router.get('/user', fetchHandler);\nrouter.get('/user', [checkAuth, isValidUser], fetchHandler);\n\n/**\n * @api {post} /api/user Create a User record\n * @apiName CreateUser\n * @apiGroup User\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} serial User serial (optional)\n * @apiParam {ObjectId} category User Category (optional)\n * @apiParam {String} title User title (optional)\n * @apiParam {String} surname User surname (required)\n * @apiParam {String} otherName User other name (required)\n * @apiParam {String} gender User gender (required)\n * @apiParam {Date} birthDate User birth date (required)\n * @apiParam {String} maritalStatus User marital status (required)\n * @apiParam {Number} children User Number of children (optional)\n * @apiParam {String} phone User office phone (required)\n * @apiParam {String} phoneHome User phone personal (optional)\n * @apiParam {String} emailPersonal User personal email Address (optional)\n * @apiParam {String} address User address (optional)\n * @apiParam {String} village User village (optional)\n * @apiParam {ObjectId} state User state (required)\n * @apiParam {ObjectId} county User county (required)\n * @apiParam {String} country User country (required)\n * @apiParam {String} email User email (optional)\n * @apiParam {String} password User password (optional)\n * @apiParam {String} otp User otp (optional)\n * @apiParam {Number} otpCount User otp count (optional)\n * @apiParam {Boolean} otpAccess User OTP Access Status\n * @apiParam {String} kin User kin (required)\n * @apiParam {String} kinPhone User kin phone (required)\n * @apiParam {String} kinAddress User kin address (required)\n * @apiParam {String} guarantor1 User guarantor1 (required)\n * @apiParam {String} guarantor1Phone User guarantor1 phone (required)\n * @apiParam {String} guarantor1Address User guarantor1 address (required)\n * @apiParam {String} guarantor2 User guarantor2 (optional)\n * @apiParam {String} guarantor2Phone User guarantor2 phone (optional)\n * @apiParam {String} guarantor2Address User guarantor2 address (optional)\n * @apiParam {String} profession User profession (optional)\n * @apiParam {String} qualification User qualification (optional)\n * @apiParam {String} institution User institution (optional)\n * @apiParam {String} employment User employment status (required)\n * @apiParam {String} tin User tin Tax Identification Number\n * @apiParam {Number} annualIncome User annualIncome is Gross Annual  Income\n * @apiParam {Number} basicSalary User basicSalary is basic net monthly salary\n * @apiParam {Number} bonus User bonus non-recurrent monthly bonus added to salary\n * @apiParam {Number} entertainmentAllowance User entertainment allowance (optional)\n * @apiParam {Number} houseAllowance User house allowance (optional)\n * @apiParam {Number} lunchAllowance User lunch allowance (optional)\n * @apiParam {Number} medicalAllowance User medical allowance (optional)\n * @apiParam {Number} transportAllowance User transport allowance (optional)\n * @apiParam {Number} utilityAllowance User utility allowance (optional)\n * @apiParam {Number} welfareAllowance User welfare allowance (optional)\n * @apiParam {Number} pension User pension To encourage pension contribution the\n *  Government allows employees to contribute more than 8% of your basic, housing,\n *  and transport as a pension contribution.\n *  By doing so, you get more tax reliefs, thus lower taxable income.\n * @apiParam {Number} assurance User Life Assurance premiums are those premiums you pay\n *  towards insuring an immediate family member in the event that you die.\n *  There is no limit to how much you can contribute and how much relief you can get from it.\n * @apiParam {ObjectId} bank User bank (optional)\n * @apiParam {String} bankAccountNumber User bank account number (optional)\n * @apiParam {String} bankAccountName User bank account name (optional)\n * @apiParam {String} rank User rank (optional)\n * @apiParam {ObjectId} office User office\n * @apiParam {ObjectId} role User role is an array of permissions the office demands\n * @apiParam {ObjectId} superior User superior id (required)\n * @apiParam {String} subsidiary User subsidiary (required)\n * @apiParam {ObjectId} terminal User terminal (required)\n * @apiParam {ObjectId} currentVehicle User currentVehicle (optional)\n * @apiParam {Array} assignments array of Objects of Asset Assigmnet History\n * managed my Asset Manager (prohibited)\n * @apiParam {Boolean} isAssignedVehicle User is assigned a vehicle\n * @apiParam {String} notice User notice (optional)\n * @apiParam {Array} ratings User ratings (optional)\n * @apiParam {Array} notifications User notifications\n * @apiParam {String} remark User remark (optional)\n * @apiParam {String} photo User photo (optional)\n * @apiParam {Boolean} isSalaryPayable User is salary payable (optional)\n * @apiParam {Boolean} isDocumentComplete User is document complete (optional)\n * @apiParam {Number} accessLevel User access level 0 - 9 Max. Zero implies No access (optional)\n * @apiParam {ObjectId} approvedBy User approved by (optional)\n * @apiParam {Date} approvedDate User approved date (optional)\n * @apiParam {Date} employedDate User employed date (optional)\n * @apiParam {ObjectId} employedBy User employed by (optional)\n * @apiParam {Date} parttimedDate User parttimed date (optional)\n * @apiParam {ObjectId} parttimedBy User parttimed by (optional)\n * @apiParam {Date} fulltimedDate User fulltimed date (optional)\n * @apiParam {ObjectId} fulltimedBy User fulltimed by (optional)\n * @apiParam {Date} leaveDate User leave date (optional)\n * @apiParam {ObjectId} leaveBy User leave by (optional)\n * @apiParam {Date} probatedDate User probated date (optional)\n * @apiParam {ObjectId} probatedBy User probated by (optional)\n * @apiParam {Date} suspendedDate User suspended date (optional)\n * @apiParam {ObjectId} suspendedBy User suspended by (optional)\n * @apiParam {Date} retiredDate User retired date (optional)\n * @apiParam {ObjectId} retiredBy User retired by (optional)\n * @apiParam {ObjectId} disengagedBy User disengaged by (optional)\n * @apiParam {Date} disengagedDate User disengaged date (optional)\n * @apiParam {String} employmentRemark User employment Remark (optional)\n * @apiParam {String} approvalRemark User approval Remark (optional)\n * @apiParam {String} status User employment approval status (optional)\n * @apiParam {Date} rejectedDate User employment rejected date (optional)\n * @apiParam {ObjectId} rejectedBy User employment rejected By (optional)\n * @apiParam {Date} lastLogin User lastLogin (optional)\n * @apiParam {Date} currentLogin User currentLogin (optional)\n * @apiParam {String} lastIp User lastIp (optional)\n * @apiParam {String} currentIp User currentIp (optional)\n * @apiParam {ObjectId} createdBy User record created by\n * @apiParam {ObjectId} updatedBy User record modified by\n * @apiSuccess {Object} User User's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 User not found.\n * @apiError 401 master access only.\n */\n// router.post(\"/user\",  createHandler);\nrouter.post('/user', createHandler);\n\n/**\n * @api {put} /api/user/{recordId} Update a User record\n * @apiName UpdateUser\n * @apiGroup User\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} serial User serial (optional)\n * @apiParam {ObjectId} category User Category (optional)\n * @apiParam {String} title User title (optional)\n * @apiParam {String} surname User surname (required)\n * @apiParam {String} otherName User other name (required)\n * @apiParam {String} gender User gender (required)\n * @apiParam {Date} birthDate User birth date (required)\n * @apiParam {String} maritalStatus User marital status (required)\n * @apiParam {Number} children User Number of children (optional)\n * @apiParam {String} phone User office phone (required)\n * @apiParam {String} phoneHome User phone personal (optional)\n * @apiParam {String} emailPersonal User personal email Address (optional)\n * @apiParam {String} address User address (optional)\n * @apiParam {String} village User village (optional)\n * @apiParam {ObjectId} state User state (required)\n * @apiParam {ObjectId} county User county (required)\n * @apiParam {String} country User country (required)\n * @apiParam {String} email User email (optional)\n * @apiParam {String} password User password (optional)\n * @apiParam {String} otp User otp (optional)\n * @apiParam {Number} otpCount User otp count (optional)\n * @apiParam {Boolean} otpAccess User OTP Access Status\n * @apiParam {String} kin User kin (required)\n * @apiParam {String} kinPhone User kin phone (required)\n * @apiParam {String} kinAddress User kin address (required)\n * @apiParam {String} guarantor1 User guarantor1 (required)\n * @apiParam {String} guarantor1Phone User guarantor1 phone (required)\n * @apiParam {String} guarantor1Address User guarantor1 address (required)\n * @apiParam {String} guarantor2 User guarantor2 (optional)\n * @apiParam {String} guarantor2Phone User guarantor2 phone (optional)\n * @apiParam {String} guarantor2Address User guarantor2 address (optional)\n * @apiParam {String} profession User profession (optional)\n * @apiParam {String} qualification User qualification (optional)\n * @apiParam {String} institution User institution (optional)\n * @apiParam {String} employment User employment status (required)\n * @apiParam {String} tin User tin Tax Identification Number\n * @apiParam {Number} annualIncome User annualIncome is Gross Annual  Income\n * @apiParam {Number} basicSalary User basicSalary is basic net monthly salary\n * @apiParam {Number} bonus User bonus non-recurrent monthly bonus added to salary\n * @apiParam {Number} entertainmentAllowance User entertainment allowance (optional)\n * @apiParam {Number} houseAllowance User house allowance (optional)\n * @apiParam {Number} lunchAllowance User lunch allowance (optional)\n * @apiParam {Number} medicalAllowance User medical allowance (optional)\n * @apiParam {Number} transportAllowance User transport allowance (optional)\n * @apiParam {Number} utilityAllowance User utility allowance (optional)\n * @apiParam {Number} welfareAllowance User welfare allowance (optional)\n * @apiParam {Number} pension User pension To encourage pension contribution the\n *  Government allows employees to contribute more than 8% of your basic, housing,\n *  and transport as a pension contribution.\n *  By doing so, you get more tax reliefs, thus lower taxable income.\n * @apiParam {Number} assurance User Life Assurance premiums are those premiums you pay\n *  towards insuring an immediate family member in the event that you die.\n *  There is no limit to how much you can contribute and how much relief you can get from it.\n * @apiParam {ObjectId} bank User bank (optional)\n * @apiParam {String} bankAccountNumber User bank account number (optional)\n * @apiParam {String} bankAccountName User bank account name (optional)\n * @apiParam {String} rank User rank (optional)\n * @apiParam {ObjectId} office User office\n * @apiParam {ObjectId} role User role is an array of permissions the office demands\n * @apiParam {ObjectId} superior User superior id (required)\n * @apiParam {String} subsidiary User subsidiary (required)\n * @apiParam {ObjectId} terminal User terminal (required)\n * @apiParam {ObjectId} currentVehicle User currentVehicle (optional)\n * @apiParam {Array} assignments array of Objects of Asset Assigmnet History\n * managed my Asset Manager (prohibited)\n * @apiParam {Boolean} isAssignedVehicle User is assigned a vehicle\n * @apiParam {String} notice User notice (optional)\n * @apiParam {Array} ratings User ratings (optional)\n * @apiParam {Array} notifications User notifications\n * @apiParam {String} remark User remark (optional)\n * @apiParam {String} photo User photo (optional)\n * @apiParam {Boolean} isSalaryPayable User is salary payable (optional)\n * @apiParam {Boolean} isDocumentComplete User is document complete (optional)\n * @apiParam {Number} accessLevel User access level 0 - 9 Max. Zero implies No access (optional)\n * @apiParam {ObjectId} approvedBy User approved by (optional)\n * @apiParam {Date} approvedDate User approved date (optional)\n * @apiParam {Date} employedDate User employed date (optional)\n * @apiParam {ObjectId} employedBy User employed by (optional)\n * @apiParam {Date} parttimedDate User parttimed date (optional)\n * @apiParam {ObjectId} parttimedBy User parttimed by (optional)\n * @apiParam {Date} fulltimedDate User fulltimed date (optional)\n * @apiParam {ObjectId} fulltimedBy User fulltimed by (optional)\n * @apiParam {Date} leaveDate User leave date (optional)\n * @apiParam {ObjectId} leaveBy User leave by (optional)\n * @apiParam {Date} probatedDate User probated date (optional)\n * @apiParam {ObjectId} probatedBy User probated by (optional)\n * @apiParam {Date} suspendedDate User suspended date (optional)\n * @apiParam {ObjectId} suspendedBy User suspended by (optional)\n * @apiParam {Date} retiredDate User retired date (optional)\n * @apiParam {ObjectId} retiredBy User retired by (optional)\n * @apiParam {ObjectId} disengagedBy User disengaged by (optional)\n * @apiParam {Date} disengagedDate User disengaged date (optional)\n * @apiParam {String} employmentRemark User employment Remark (optional)\n * @apiParam {String} approvalRemark User approval Remark (optional)\n * @apiParam {String} status User employment approval status (optional)\n * @apiParam {Date} rejectedDate User employment rejected date (optional)\n * @apiParam {ObjectId} rejectedBy User employment rejected By (optional)\n * @apiParam {Date} lastLogin User lastLogin (optional)\n * @apiParam {Date} currentLogin User currentLogin (optional)\n * @apiParam {String} lastIp User lastIp (optional)\n * @apiParam {String} currentIp User currentIp (optional)\n * @apiParam {ObjectId} createdBy User record created by\n * @apiParam {ObjectId} updatedBy User record modified by\n * @apiSuccess {Object} User User's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 User not found.\n * @apiError 401 master access only.\n */\nrouter.put('/user/:recordId', [checkAuth, isValidUser], updateHandler);\n\n/**\n * @api {patch} /api/user/{recordId} Patch User\n * @apiName PatchUser\n * @apiGroup User\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 User not found.\n * @apiError 401 master access only.\n */\nrouter.patch('/user/:recordId', [checkAuth, isValidUser], patchHandler);\n\n/**\n * @api {delete} /api/user/{recordId} Delete a User record\n * @apiName DeleteUser\n * @apiGroup User\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required User ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 User not found.\n * @apiError 401 master access only.\n */\nrouter.delete('/user/:recordId', [checkAuth, isValidUser], deleteHandler);\n\n/**\n * @api {post} /api/user/login Login User\n * @apiName LoginUser\n * @apiGroup User\n * @apiParam {String} recordId User Id (required)\n * @apiParam {String} email User email address (optional)\n * @apiParam {String} password User password (optional)\n * @apiParam {String} officePhone User official phone number (optional)\n * @apiParam {String} otp User One-Time-Password sent to phone (optional)\n * @apiParam {String} type Login type \"EMAIL\", \"PHONE\", \"OTP\" (required)\n * @apiSuccess (Success 200) 200 Login Successful.\n * @apiError 404 User not found.\n */\nrouter.post('/user/login', loginHandler);\n\n/**\n * @api {post} /api/user/otp ForgotPassword User\n * @apiName ForgotUser\n * @apiGroup User\n * @apiParam {String} email User email address (required)\n * @apiParam {String} phone User official phone # (required)\n * @apiSuccess (Success 200) 200 Login Successful.\n * @apiError 404 User not found.\n */\n// router.post('/user/otp', sendOTPHandler);\n\n/**\n * @api {post} /api/user/photo/{recordId} updatePhoto User\n * @apiName UpdatePhoto\n * @apiGroup User\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId User Id (required)\n * @apiParam {String} phone User official phone # (required)\n * @apiSuccess (Success 200) 200 Login Successful.\n * @apiError 404 User not found.\n */\n// router.post('/user/photo/:recordId', updatePhotoHandler);\n\n/**\n * @api {put} /api/user/approval/{recordId}\n *  Update User approval status\n * @apiName UpdateUserApproval\n * @apiGroup User\n * @apiParam {String} recordId User record id (primaryKey)\n * @apiParam {Enum} status User PENDING, APPROVED, REJECTED\n * @apiSuccess {Object} User record's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 User not found.\n * @apiError 401 master access only.\n */\nrouter.put('/user/approval/:recordId', [checkAuth, isValidUser], updateApprovalHandler);\n\n/**\n * @api {put} /api/user/approval/{recordId}\n *  Update User approval status\n * @apiName UpdateUserApproval\n * @apiGroup User\n * @apiParam {String} recordId User record id (primaryKey)\n * @apiParam {ObjectId} verificationVideo Verification Video Media ObjectID\n *  [Video should have been uplaoded via 'api/media/video' route]\n * @apiParam {Date} verificationDate Verification Date\n * @apiSuccess {Object} User record's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 User not found.\n * @apiError 401 master access only.\n */\nrouter.put('/user/verify/:recordId', [checkAuth, isValidUser], updateVerificationStatusHandler);\n\nexport default router;\n"],"file":"routes.js"}