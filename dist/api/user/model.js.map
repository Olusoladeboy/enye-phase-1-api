{"version":3,"sources":["../../../src/api/user/model.js"],"names":["Schema","mongoose","ObjectId","Types","STATUS","validateLogin","Joi","object","email","string","trim","optional","phone","min","max","otp","password","type","valid","validateCreate","title","lastName","required","firstName","otherName","gender","birthDate","date","maritalStatus","address","state","county","country","otpCount","number","kin","kinPhone","kinAddress","profession","bank","bankAccountNumber","bankAccountName","reviews","array","photo","userType","createdBy","length","validateUpdate","verificationVideo","verificationDate","updatedBy","validateApproval","status","verified","approvedBy","approvedDate","rejectedBy","rejectedDate","validateVerify","schema","String","text","Object","values","GENDER","Date","MARITAL_STATUS","ref","lowercase","unique","match","Number","otpAccess","Boolean","notifications","approvalRemark","lastLogin","currentLogin","lastIp","currentIp","deleted","deletedAt","deletedBy","options","DATABASE","OPTIONS","newSchema","virtual","get","set","v","substring","indexOf","index","User","model","createIndexes"],"mappings":"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","sourcesContent":["/* eslint-disable func-names */\nimport Joi from 'joi';\nimport mongoose from 'mongoose';\nimport { DATABASE, GENDER, MARITAL_STATUS } from '../../constants';\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\nconst STATUS = ['PENDING', 'APPROVED', 'REJECTED']; // Record Status\n\nexport const validateLogin = Joi.object({\n  email: Joi.string().trim().email().optional(),\n  phone: Joi.string().min(11).max(14).optional(),\n  otp: Joi.string().optional(),\n  password: Joi.string().optional(),\n  type: Joi.string().valid('EMAIL', 'PHONE', 'OTP').optional(),\n});\n\nexport const validateCreate = Joi.object({\n  title: Joi.string().optional(),\n  lastName: Joi.string().required(),\n  firstName: Joi.string().required(),\n  otherName: Joi.string().optional(),\n  gender: Joi.string().optional(),\n  birthDate: Joi.date().optional(),\n  maritalStatus: Joi.string().optional(),\n  phone: Joi.string().required(),\n  email: Joi.string().trim().email().required(),\n  address: Joi.string().optional(),\n  state: Joi.string().optional(),\n  county: Joi.string().optional(),\n  country: Joi.string().optional(),\n  password: Joi.string().required(),\n  otp: Joi.string().optional(),\n  otpCount: Joi.number().optional(),\n  kin: Joi.string().optional(),\n  kinPhone: Joi.string().optional(),\n  kinAddress: Joi.string().optional(),\n  profession: Joi.string().optional(),\n  bank: Joi.string().optional(),\n  bankAccountNumber: Joi.string().optional(),\n  bankAccountName: Joi.string().optional(),\n  reviews: Joi.array().optional(),\n  photo: Joi.string().optional(),\n  userType: Joi.string().required(),\n  createdBy: Joi.string().trim().length(24).optional(),\n});\n\nexport const validateUpdate = Joi.object({\n  title: Joi.string().optional(),\n  lastName: Joi.string().optional(),\n  firstName: Joi.string().optional(),\n  otherName: Joi.string().optional(),\n  gender: Joi.string().optional(),\n  birthDate: Joi.date().optional(),\n  maritalStatus: Joi.string().optional(),\n  phone: Joi.string().optional(),\n  email: Joi.string().trim().email().optional(),\n  address: Joi.string().optional(),\n  state: Joi.string().optional(),\n  county: Joi.string().optional(),\n  country: Joi.string().optional(),\n  password: Joi.string().optional(),\n  otp: Joi.string().optional(),\n  otpCount: Joi.number().optional(),\n  kin: Joi.string().optional(),\n  kinPhone: Joi.string().optional(),\n  kinAddress: Joi.string().optional(),\n  profession: Joi.string().optional(),\n  bank: Joi.string().optional(),\n  bankAccountNumber: Joi.string().optional(),\n  bankAccountName: Joi.string().optional(),\n  reviews: Joi.array().optional(),\n  photo: Joi.string().optional(),\n  userType: Joi.string().optional(),\n  verificationVideo: Joi.string().trim().length(24).optional(),\n  verificationDate: Joi.date().optional(),\n  updatedBy: Joi.string().trim().length(24).required(),\n});\n\nexport const validateApproval = Joi.object({\n  status: Joi.string().trim().valid(...STATUS).required(),\n  verified: Joi.boolean().required(),\n  approvedBy: Joi.string().optional(),\n  approvedDate: Joi.date().optional(),\n  rejectedBy: Joi.string().optional(),\n  rejectedDate: Joi.date().optional(),\n  updatedBy: Joi.string().trim().length(24).required(),\n});\n\nexport const validateVerify = Joi.object({\n  verificationVideo: Joi.string().trim().length(24).optional(),\n  verificationDate: Joi.date().optional(),\n  updatedBy: Joi.string().trim().length(24).required(),\n});\n\nexport const schema = {\n  title: { type: String },\n  lastName: { type: String, required: true, text: true },\n  firstName: { type: String, required: true, text: true },\n  otherName: { type: String, text: true },\n  gender: {\n    type: String,\n    enum: Object.values(GENDER),\n    required: false,\n  },\n  birthDate: { type: Date, required: false },\n  maritalStatus: {\n    type: String,\n    enum: Object.values(MARITAL_STATUS),\n  },\n  phone: { type: String, required: false, text: true },\n  address: { type: String },\n  state: { type: ObjectId, ref: 'State', required: false },\n  county: { type: ObjectId, ref: 'County', required: false },\n  country: { type: String, required: false, default: 'ng' },\n  email: {\n    type: String,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: true,\n    required: true,\n    // eslint-disable-next-line no-useless-escape\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please fill a valid email address'],\n  },\n  password: { type: String, required: true },\n  otp: { type: String },\n  otpCount: { type: Number, default: 0 },\n  otpAccess: { type: Boolean, default: false },\n  kin: { type: String, required: false },\n  kinPhone: { type: String },\n  kinAddress: { type: String },\n  bank: { type: ObjectId, ref: 'Bank' },\n  bankAccountNumber: { type: String },\n  bankAccountName: { type: String },\n  reviews: [{ type: ObjectId, ref: 'Reviews' }],\n  notifications: [{ type: ObjectId, ref: 'Notification' }],\n  photo: { type: String },\n  userType: { type: String },\n  verificationVideo: { type: ObjectId, ref: 'Media' },\n  verificationDate: { type: Date },\n  //* Approval\n  verified: { type: Boolean, default: false },\n  status: { type: String, enum: STATUS, default: 'PENDING' },\n  approvedDate: { type: Date },\n  approvedBy: { type: ObjectId, ref: 'User' },\n  rejectedDate: { type: Date },\n  rejectedBy: { type: ObjectId, ref: 'User' },\n  approvalRemark: { type: String },\n  //* Authentication\n  lastLogin: { type: Date },\n  currentLogin: { type: Date },\n  lastIp: { type: String },\n  currentIp: { type: String },\n  createdBy: { type: ObjectId, ref: 'User', required: false },\n  updatedBy: { type: ObjectId, ref: 'User' },\n\n  deleted: { type: Boolean, default: false },\n  deletedAt: { type: Date },\n  deletedBy: { type: ObjectId, ref: 'User' },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\n\nnewSchema.virtual('fullName')\n  .get(function () {\n    const title = this.title ? this.title : '';\n    return `${title} ${this.firstName} ${this.lastName}`;\n  })\n  .set(function (v) {\n    // `v` is the value being set, so use the value to set\n    // `surname` and `otherName`.\n    const lastName = v.substring(0, v.indexOf(' '));\n    const firstName = v.substring(v.indexOf(' ') + 1);\n    this.set({ lastName, firstName });\n  });\n\nnewSchema.index({ phone: 1, email: 1 }, { unique: true });\n// newSchema.index({\n//   phone: 'text',\n//   lastName: 'text',\n//   firstName: 'text',\n//   email: 'text',\n// }, {\n//   unique: true,\n// });\n\nnewSchema.set('collection', 'user');\n// newSchema.plugin(mongoose_csv);\n\nconst User = mongoose.model('User', newSchema);\nUser.createIndexes({\n  phone: 'text', lastName: 'text', firstName: 'text', email: 'text',\n});\n\nexport default User;\n"],"file":"model.js"}