{"version":3,"sources":["../../../src/api/review/model.js"],"names":["Schema","mongoose","ObjectId","Types","validateCreate","Joi","object","star","number","required","user","string","trim","review","task","length","optional","createdBy","validateUpdate","min","max","updatedBy","schema","type","Number","ref","String","deleted","Boolean","deletedAt","Date","deletedBy","options","DATABASE","OPTIONS","newSchema","set","Review","model"],"mappings":";;;;;;;AAYA;;AACA;;AACA;;;;AAdA;;AACA;;AACA;;;;;;;;;;IAcQA,M,GAAWC,oB,CAAXD,M;IACAE,Q,GAAaF,MAAM,CAACG,K,CAApBD,Q;;AAED,IAAME,cAAc,GAAGC,gBAAIC,MAAJ,CAAW;AACvCC,EAAAA,IAAI,EAAEF,gBAAIG,MAAJ,GAAaC,QAAb,EADiC;AAEvCC,EAAAA,IAAI,EAAEL,gBAAIM,MAAJ,GAAaC,IAAb,GAAoBH,QAApB,EAFiC;AAGvCI,EAAAA,MAAM,EAAER,gBAAIM,MAAJ,GAAaC,IAAb,GAAoBH,QAApB,EAH+B;AAIvCK,EAAAA,IAAI,EAAET,gBAAIM,MAAJ,GAAaC,IAAb,GAAoBG,MAApB,CAA2B,EAA3B,EAA+BC,QAA/B,EAJiC;AAKvCC,EAAAA,SAAS,EAAEZ,gBAAIM,MAAJ,GAAaC,IAAb,GAAoBG,MAApB,CAA2B,EAA3B,EAA+BN,QAA/B;AAL4B,CAAX,CAAvB;;;;AAQA,IAAMS,cAAc,GAAGb,gBAAIC,MAAJ,CAAW;AACvCC,EAAAA,IAAI,EAAEF,gBAAIG,MAAJ,GAAaW,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,CAAxB,EAA2BJ,QAA3B,EADiC;AAEvCN,EAAAA,IAAI,EAAEL,gBAAIM,MAAJ,GAAaC,IAAb,GAAoBI,QAApB,EAFiC;AAGvCH,EAAAA,MAAM,EAAER,gBAAIM,MAAJ,GAAaC,IAAb,GAAoBI,QAApB,EAH+B;AAIvCK,EAAAA,SAAS,EAAEhB,gBAAIM,MAAJ,GAAaC,IAAb,GAAoBG,MAApB,CAA2B,EAA3B,EAA+BN,QAA/B;AAJ4B,CAAX,CAAvB;;;AAOA,IAAMa,MAAM,GAAG;AACpBf,EAAAA,IAAI,EAAE;AAAEgB,IAAAA,IAAI,EAAEC,MAAR;AAAgBL,IAAAA,GAAG,EAAE,CAArB;AAAwBC,IAAAA,GAAG,EAAE,CAA7B;AAAgCX,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,cAAP;AAA1C,GADc;AAEpBC,EAAAA,IAAI,EAAE;AAAEa,IAAAA,IAAI,EAAErB,QAAR;AAAkBuB,IAAAA,GAAG,EAAE;AAAvB,GAFc;AAGpBZ,EAAAA,MAAM,EAAE;AAAEU,IAAAA,IAAI,EAAEG;AAAR,GAHY;AAIpBZ,EAAAA,IAAI,EAAE;AAAES,IAAAA,IAAI,EAAErB,QAAR;AAAkBuB,IAAAA,GAAG,EAAE;AAAvB,GAJc;AAKpBR,EAAAA,SAAS,EAAE;AAAEM,IAAAA,IAAI,EAAErB,QAAR;AAAkBO,IAAAA,QAAQ,EAAE;AAA5B,GALS;AAMpBY,EAAAA,SAAS,EAAE;AAAEE,IAAAA,IAAI,EAAErB,QAAR;AAAkBuB,IAAAA,GAAG,EAAE;AAAvB,GANS;AAOpBE,EAAAA,OAAO,EAAE;AAAEJ,IAAAA,IAAI,EAAEK,OAAR;AAAiB,eAAS;AAA1B,GAPW;AAQpBC,EAAAA,SAAS,EAAE;AAAEN,IAAAA,IAAI,EAAEO;AAAR,GARS;AASpBC,EAAAA,SAAS,EAAE;AAAER,IAAAA,IAAI,EAAErB,QAAR;AAAkBuB,IAAAA,GAAG,EAAE;AAAvB;AATS,CAAf;;AAYP,IAAMO,OAAO,GAAGC,oBAASC,OAAzB;AAEA,IAAMC,SAAS,GAAG,IAAInC,MAAJ,CAAWsB,MAAX,EAAmBU,OAAnB,CAAlB;AACAG,SAAS,CAACC,GAAV,CAAc,YAAd,EAA4B,QAA5B;;AAEA,IAAMC,MAAM,GAAGpC,qBAASqC,KAAT,CAAe,QAAf,EAAyBH,SAAzB,CAAf;;eAEeE,M","sourcesContent":["/* eslint-disable object-curly-newline */\n/* eslint-disable import/no-cycle */\n/**\n * @author Olusola\n * @property {ObjectId} id Review primaryKey\n * @property {Number} star Review star from 0 to 5 (required)\n * @property {ObjectId} user Rated User subject ObjectId\n * @property {String} review Review review comment\n * @property {String} task Task reviewed (ObjectId)\n * @description Review model holds record of customer feedback about serveice rendered\n * by User, Partner or experience about a Terminal or Vehicle\n */\nimport Joi from 'joi';\nimport mongoose from 'mongoose';\nimport { DATABASE } from '../../constants';\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const validateCreate = Joi.object({\n  star: Joi.number().required(),\n  user: Joi.string().trim().required(),\n  review: Joi.string().trim().required(),\n  task: Joi.string().trim().length(24).optional(),\n  createdBy: Joi.string().trim().length(24).required(),\n});\n\nexport const validateUpdate = Joi.object({\n  star: Joi.number().min(1).max(5).optional(),\n  user: Joi.string().trim().optional(),\n  review: Joi.string().trim().optional(),\n  updatedBy: Joi.string().trim().length(24).required(),\n});\n\nexport const schema = {\n  star: { type: Number, min: 1, max: 5, required: [true, 'Why no star?'] },\n  user: { type: ObjectId, ref: 'User' },\n  review: { type: String },\n  task: { type: ObjectId, ref: 'Task' },\n  createdBy: { type: ObjectId, required: true },\n  updatedBy: { type: ObjectId, ref: 'User' },\n  deleted: { type: Boolean, default: false },\n  deletedAt: { type: Date },\n  deletedBy: { type: ObjectId, ref: 'User' },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set('collection', 'review');\n\nconst Review = mongoose.model('Review', newSchema);\n\nexport default Review;\n"],"file":"model.js"}