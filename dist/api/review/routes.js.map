{"version":3,"sources":["../../../src/api/review/routes.js"],"names":["router","express","Router","get","checkAuth","fetchHandler","post","isValidUser","createHandler","put","updateHandler","patch","patchHandler","deleteHandler"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAHA;AAKA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AAEA;;;;;;;;;;;;;;;;;AAeAF,MAAM,CAACG,GAAP,CAAW,UAAX,EAAuB,CAACC,qBAAD,CAAvB,EAAoCC,wBAApC;AAEA;;;;;;;;;;;;;;;;;AAgBAL,MAAM,CAACM,IAAP,CAAY,UAAZ,EAAwB,CAACF,qBAAD,EAAYG,uBAAZ,CAAxB,EAAkDC,yBAAlD;AAEA;;;;;;;;;;;;;;;;;;AAiBAR,MAAM,CAACS,GAAP,CAAW,oBAAX,EAAiC,CAACL,qBAAD,EAAYG,uBAAZ,CAAjC,EAA2DG,yBAA3D;AAEA;;;;;;;;;;;AAUAV,MAAM,CAACW,KAAP,CAAa,oBAAb,EAAmC,CAACP,qBAAD,EAAYG,uBAAZ,CAAnC,EAA6DK,wBAA7D;AAEA;;;;;;;;;;;AAUAZ,MAAM,UAAN,CAAc,oBAAd,EAAoC,CAACI,qBAAD,EAAYG,uBAAZ,CAApC,EAA8DM,yBAA9D;eAEeb,M","sourcesContent":["/* eslint-disable object-curly-newline */\nimport express from 'express';\nimport { checkAuth, isValidUser } from '../../middleware';\nimport { fetchHandler, createHandler, updateHandler, deleteHandler, patchHandler } from './controller';\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/reviews?id={recordId} Retrieve one or all records\n * @apiName RetrieveRatings\n * @apiGroup Rating\n  * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i api/reviews?\n * @apiParam {Object} filter query condition (optional)\n * @apiParam {Number} skip Number of records to offset by (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} sort how records would be arranged in alphabet (optional)\n * @apiParam {String} projection list of record's attributes to retrieve (optional)\n * @apiDescription Records  of permissible api routes staff can access\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get('/reviews', [checkAuth], fetchHandler);\n\n/**\n * @api {post} /api/reviews Create reviews\n * @apiName CreateRating\n * @apiGroup Rating\n * @apiParam {Number} star Rating star from 0 to 5 (required)\n * @apiParam {String} subject Rating subject [\"STAFF\", \"PARTNER\", \"TERMINAL\", \"VEHICLE\"] (required)\n * @apiParam {ObjectId} staff Rated User subject ObjectId\n * @apiParam {ObjectId} partner Rated Partner subject ObjectId\n * @apiParam {ObjectId} terminal Rated Terminal subject ObjectId\n * @apiParam {ObjectId} vehicle Rated Vehicle subject ObjectId\n * @apiParam {ObjectId} ticket Rated Ticket subject O\n * @apiSuccess {Object} Rating Rating's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Rating not found.\n * @apiError 401 master access only.\n */\nrouter.post('/reviews', [checkAuth, isValidUser], createHandler);\n\n/**\n * @api {put} /api/reviews/{recordId} Update reviews\n * @apiName UpdateRating\n * @apiGroup Rating\n * @apiPermission master\n * @apiParam {Number} star Rating star from 0 to 5 (required)\n * @apiParam {String} subject Rating subject [\"STAFF\", \"PARTNER\", \"TERMINAL\", \"VEHICLE\"] (required)\n * @apiParam {ObjectId} staff Rated User subject ObjectId\n * @apiParam {ObjectId} partner Rated Partner subject ObjectId\n * @apiParam {ObjectId} terminal Rated Terminal subject ObjectId\n * @apiParam {ObjectId} vehicle Rated Vehicle subject ObjectId\n * @apiParam {ObjectId} ticket Rated Ticket subject O\n * @apiSuccess {Object} Rating Rating's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Rating not found.\n * @apiError 401 master access only.\n */\nrouter.put('/reviews/:recordId', [checkAuth, isValidUser], updateHandler);\n\n/**\n * @api {patch} /api/reviews/{recordId} Patch reviews\n * @apiName PatchRating\n * @apiGroup Rating\n * @apiHeader {String} Authorization Bearer token\n * @apiParam {String} recordId required record ObjectId\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Rating not found.\n * @apiError 401 master access only.\n */\nrouter.patch('/reviews/:recordId', [checkAuth, isValidUser], patchHandler);\n\n/**\n * @api {delete} /api/reviews/{recordId} Delete reviews\n * @apiName DeleteRating\n * @apiGroup Rating\n * @apiPermission master\n * @apiParam {ObjectId} recordId record ObjectId.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Rating not found.\n * @apiError 401 master access only.\n */\nrouter.delete('/reviews/:recordId', [checkAuth, isValidUser], deleteHandler);\n\nexport default router;\n"],"file":"routes.js"}