{"version":3,"sources":["../../../src/api/access/model.js"],"names":["Schema","mongoose","schema","ipaddress","type","String","trim","index","software","agent","method","baseUrl","version","status","options","DATABASE","OPTIONS","newSchema","set","Access","model"],"mappings":";;;;;;;AAWA;;AAEA;;;;AAbA;;;;;;;;;;;AAYA;AAEA;IAEQA,M,GAAWC,oB,CAAXD,M,EAER;;AACO,IAAME,MAAM,GAAG;AACdC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,IAAI,EAAE,IAAtB;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GADG;AAEdC,EAAAA,QAAQ,EAAE;AAAEJ,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GAFI;AAGdG,EAAAA,KAAK,EAAE;AAAEL,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GAHO;AAIdI,EAAAA,MAAM,EAAE;AAAEN,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GAJM;AAKdK,EAAAA,OAAO,EAAE;AAAEP,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GALK;AAMdM,EAAAA,OAAO,EAAE;AAAER,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GANK;AAOdO,EAAAA,MAAM,EAAE;AAAET,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,IAAI,EAAE;AAAtB;AAPM,CAAf;;AAUP,IAAMQ,OAAO,GAAGC,oBAASC,OAAzB;AAEA,IAAMC,SAAS,GAAG,IAAIjB,MAAJ,CAAWE,MAAX,EAAmBY,OAAnB,CAAlB;AACAG,SAAS,CAACC,GAAV,CAAc,YAAd,EAA4B,QAA5B;;AAEA,IAAMC,MAAM,GAAGlB,qBAASmB,KAAT,CAAe,QAAf,EAAyBH,SAAzB,CAAf;;eAEeE,M","sourcesContent":["/**\n * @author 4Dcoder\n * @property {String} ipaddress Access IP address\n * @property {String} software Access software\n * @property {String} agent Access agent description\n * @property {String} method Access GET|POST|PUT|OPTLETE\n * @property {String} baseUrl Access base Url\n * @property {String} version Access version\n * @property {String} status Access status\n * @description Access model holds api access\n */\nimport mongoose from \"mongoose\";\n// eslint-disable-next-line camelcase\nimport { DATABASE } from \"../../constants\";\n// eslint-disable-next-line import/no-cycle\n\nconst { Schema } = mongoose;\n\n// const allData = { ipaddress, software, agent, method, baseUrl, version, status };\nexport const schema = {\n        ipaddress: { type: String, trim: true, index: true },\n        software: { type: String, trim: true },\n        agent: { type: String, trim: true },\n        method: { type: String, trim: true },\n        baseUrl: { type: String, trim: true },\n        version: { type: String, trim: true },\n        status: { type: String, trim: true },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"access\");\n\nconst Access = mongoose.model(\"Access\", newSchema);\n\nexport default Access;\n"],"file":"model.js"}